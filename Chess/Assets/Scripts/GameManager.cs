//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;

/// <summary>
/// Enumeration of the colors
/// (Menu = 0, Classic).
/// </summary>
public enum GameMode {Menu, Classic};

/// <summary>
/// Enumeration of the colors
/// (Wait = 0, Select = 1, Action = 2).
/// </summary>
public enum GameState {Wait, Select, Action};



public class GameManager : MonoBehaviour
{
    public GameMode gameMode = GameMode.Classic;
    public GameState gameState = GameState.Select;
    private Board board;
    public ChessPiece activePiece;
    public TeamColor turnTeamColor = TeamColor.Black;

    public Board Board {get; private set;}

    void Awake()
    {

    }

    void Start()
    {
        board = new Board(GameObject.FindObjectsOfType<BoardSpace>()); //Create the Board
    }

    // Update is called once per frame
    void Update()
    {

    }

    public void goToState(GameState stateToGo, TeamColor turnTeamColor) 
    {
        switch (stateToGo) 
        { 
            case GameState.Wait:
                gameState = GameState.Wait;
                break;
            case GameState.Select:
                gameState = GameState.Select;
                board.clearAvailableSpaces();
                break;
            case GameState.Action:
                gameState = GameState.Action;
                (activePiece.GetComponent("Halo") as Behaviour).enabled = true;
                break;
        
        }
    }

    public void changeTurn() {
        switch (turnTeamColor){
            case (TeamColor.Black):
                turnTeamColor = TeamColor.White;
                break;
            case (TeamColor.White):
                turnTeamColor = TeamColor.Black;
                break;
        }
    }
}



